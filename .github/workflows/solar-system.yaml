name: Solar System Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  unit-Testing:
    name: Unit Testing
    strategy:
      matrix:
        nodejs_version: [18]
        operating_system: [ubuntu-latest]
        exclude:
          - nodejs_version: 18
            operating_system: macos-latest
    runs-on: ${{ matrix.operating_system }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJs Version - ${{ matrix.nodejs_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.nodejs_version }}

      - name: Cache NPM Dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: npm install

      - name: Unit Testing
        id: nodejs-unit-testing-step
        run: npm test

      - name: Archive Test Result
        if: always() # && (steps.nodejs-unit-testing-step.outcome == 'failure' || steps.nodejs-unit-testing-step.outcome == 'success')
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test-Result
          path: test-results.xml

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJs Version - 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache NPM Dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: npm install

      - name: Check Code Coverage
        continue-on-error: true
        run: npm run coverage

      - name: Archive Test Result
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5
  docker:
    name: Containerization
    needs: [code-coverage, unit-Testing]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
       
    - name: DockerHub Login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
       
    - name: Docker Build For Testing
      uses: docker/build-push-action@v6
      with:
        context: .
        push: false
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

    #- name: Build and push
      #uses: docker/build-push-action@v6
      #with:
        #platforms: linux/amd64,linux/arm64
        #push: true
        #tags: ${{ env.LATEST_TAG }}

    - name: Docker Image Test
      run: |
        docker images
        docker run --name solar-system-app -d \
            -p 3000:3000 \
            -e MONGO_uri=$MONGO_URL \ 
            -e MONGO_USERNAME=$MONGO_USERNAME
            -e MONGO_PASSWORD=$MONGO_PASSWORD
            ${{ secrets.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
            
        export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
        echo $IP
          
        echo Tetsing Image URL using wget
        wget -q -O - 127.0.0.1:3000/live | grep live

    - name: Dokcer push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
